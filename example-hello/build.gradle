plugins {
	id 'java'
	id 'org.springframework.boot' version '3.5.6'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'works.bosk'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(jdkVersion)
	}
}

compileJava {
	options.release = minSupportedJavaVersion
}

compileTestJava {
	options.release = null
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
	openTelemetryJavaAgent {
		canBeResolved = true
		extendsFrom runtimeOnly
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	openTelemetryJavaAgent 'io.opentelemetry.javaagent:opentelemetry-javaagent:2.20.0'
	implementation 'io.opentelemetry:opentelemetry-exporter-jaeger:1.34.1'
	implementation('io.opentelemetry.instrumentation:opentelemetry-instrumentation-annotations:2.20.0')

	// A real project would pull these like any other library
	implementation project(':bosk-spring-boot')
	implementation project(':bosk-logback')
	implementation project(':bosk-opentelemetry')
}

tasks.register('run', JavaExec) {
	// Run the application with the opentelemetry-javaagent attached
	classpath = sourceSets.main.runtimeClasspath
	mainClass = 'works.bosk.hello.HelloApplication'
	args = []

	def javaAgentPath = configurations.openTelemetryJavaAgent.find { it.name.contains('opentelemetry-javaagent') }

	jvmArgs = [
			'-javaagent:' + javaAgentPath,
			'-Dotel.resource.attributes=service.name=hello',
			'-Dotel.traces.exporter=otlp',
			'-Dotel.metrics.exporter=none',
	]
}

tasks.named('test') {
	useJUnitPlatform()
}
